{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,UAAWJ,SAASC,cAAc,WA2BpC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAACR,E,MAAUC,GAEjCQ,YAAW,KACLJ,EACFF,EAAQK,IAERJ,EAAOI,GACTE,QAAQC,IAAIV,MAGXA,MArCPT,EAAKM,UAAUc,iBAAiB,SAASC,IACxCA,EAAIC,iBACH,IAAIC,EAASC,OAAOxB,EAAKK,YAAYoB,OACjCC,EAAQF,OAAOxB,EAAKC,WAAWwB,OAC/BE,EAAOH,OAAOxB,EAAKI,UAAUqB,OAE/B,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EAErDV,QAAQC,IAAI,OAAQQ,GACpBT,QAAQC,IAAI,QAASO,GAGnBnB,EAAcqB,EAAUF,GACxBG,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAqBxB,QAAiBC,UAE5DwB,OAAM,EAACzB,SAAEA,EAAQC,MAAEA,MACnBqB,EAAAhC,GAASiC,OAAOG,QAAQ,sBAAoB1B,QAAeC,UAE9DiB,GAASC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  inputDelay: document.querySelector(`input[name=\"delay\"]`),\n  inputStep: document.querySelector(`input[name=\"step\"]`),\n  inputAmount: document.querySelector(`input[name=\"amount\"]`),\n  submitBtn: document.querySelector(`button`),\n}\n\nrefs.submitBtn.addEventListener(`click`,(evn) => {\n evn.preventDefault();\n  let amount = Number(refs.inputAmount.value);\n  let delay = Number(refs.inputDelay.value);\n  let step = Number(refs.inputStep.value);  \n  \n    for (let position = 1; position <= amount; position += 1) {\n       \n      console.log('step', step);\n      console.log('delay', delay);\n      \n\t\n        createPromise(position, delay)\n       .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          })\n         .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n         });\n       delay += step;         \n    } \n  \n});\n\nfunction createPromise(position, delay) {  \n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    const objectPromise = {position, delay}; \n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(objectPromise);\n      } else {\n        reject(objectPromise)\n      console.log(delay);\n      }     \n      \n    }, delay);\n    \n  });\n  \n};\n\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","submitBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","objectPromise","setTimeout","console","log","addEventListener","evn","preventDefault","amount","Number","value","delay1","step","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.bd40e66d.js.map"}